{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Build package",
      "detail": "Build a package in the workspace.",
      "icon": {
        "id": "tools",
        "color": "terminal.ansiGreen"
      },
      "type": "process",
      "command": "cargo",
      "args": [
        "make",
        "build-package"
      ],
      "options": {
        "cwd": "${workspaceFolder}",
        "env": {
          "BUILD_PACKAGE_NAME": "${input:packageName}"
        }
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": true
      },
      "problemMatcher": "$rustc"
    },
    {
      "label": "Clean",
      "detail": "Clean artifacts generated by cargo.",
      "icon": {
        "id": "trash",
        "color": "terminal.ansiYellow"
      },
      "type": "process",
      "command": "cargo",
      "args": [
        "make",
        "clean"
      ],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": true
      },
      "problemMatcher": "$rustc"
    },
    {
      "label": "Format code",
      "detail": "Format the code in the workspace",
      "icon": {
        "id": "code",
        "color": "terminal.ansiGreen"
      },
      "type": "process",
      "command": "cargo",
      "args": [
        "make",
        "rustfmt"
      ],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "Run FediProto Sync",
      "detail": "Runs the application locally for testing.",
      "icon": {
        "id": "play",
        "color": "terminal.ansiGreen"
      },
      "type": "process",
      "command": "cargo",
      "args": [
        "run",
        "--package",
        "fediproto-sync"
      ],
      "options": {
        "cwd": "${workspaceFolder}",
        "env": {
          "FEDIPROTO_SYNC_ENVIRONMENT": "Development_${input:dbType}",
          "RUST_BACKTRACE": "1",
          "JEMALLOC_SYS_WITH_MALLOC_CONF": "background_thread:true,narenas:1,tcache:false,dirty_decay_ms:0,muzzy_decay_ms:0,abort_conf:true"
        }
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": true
      },
      "problemMatcher": "$rustc",
      "isBackground": true
    },
    {
      "label": "Database: New migration",
      "detail": "Create a new migration for the database.",
      "icon": {
        "id": "new-file",
        "color": "terminal.ansiBlue"
      },
      "type": "process",
      "command": "diesel",
      "args": [
        "migration",
        "generate",
        "--config-file",
        "${workspaceFolder}/diesel.${input:dbType}.toml",
        "--diff-schema",
        "${input:dbMigrationName}"
      ],
      "options": {
        "cwd": "${workspaceFolder}",
        "env": {
          "DATABASE_URL": "${input:dbUrl}"
        }
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "Database: Start local container",
      "detail": "Run a local database container for development.",
      "icon": {
        "id": "database",
        "color": "terminal.ansiYellow"
      },
      "type": "docker-compose",
      "dockerCompose": {
        "up": {
          "detached": false,
          "build": true
        },
        "files": [
          "${workspaceFolder}/.local/postgres/docker-compose.yml"
        ]
      },
      "options": {
        "cwd": "${workspaceFolder}/.local/postgres"
      },
      "presentation": {
        "echo": false,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": true,
        "close": true
      },
      "isBackground": true
    },
    {
      "label": "Database: Stop local container",
      "detail": "Run a local database container for development.",
      "icon": {
        "id": "database",
        "color": "terminal.ansiRed"
      },
      "type": "docker-compose",
      "dockerCompose": {
        "down": {
          "removeVolumes": false
        },
        "files": [
          "${workspaceFolder}/.local/postgres/docker-compose.yml"
        ]
      },
      "options": {
        "cwd": "${workspaceFolder}/.local/postgres"
      },
      "presentation": {
        "echo": false,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": true,
        "close": true
      },
      "isBackground": false
    },
    {
      "label": "git-town",
      "detail": "Run a git-town command",
      "icon": {
        "id": "git-compare",
        "color": "terminal.ansiBlack"
      },
      "type": "process",
      "command": "/bin/bash",
      "args": [
        "-c",
        "${workspaceFolder}/tools/bash/runGitTown.sh ${input:gitTownAction}"
      ],
      "windows": {
        "command": "pwsh",
        "args": [
          "-NoLogo",
          "-File",
          "${workspaceFolder}/tools/pwsh/Run-GitTown.ps1",
          "-Action",
          "${input:gitTownAction}"
        ]
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "presentation": {
        "echo": false,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true,
        "close": true
      },
      "problemMatcher": []
    },
    {
      "label": "Build fediproto-sync",
      "hide": true,
      "type": "process",
      "command": "/bin/bash",
      "args": [
        "-c",
        "${workspaceFolder}/tools/bash/buildPackage.sh -n fediproto-sync -p Debug"
      ],
      "windows": {
        "command": "pwsh",
        "args": [
          "-NoLogo",
          "-NoProfile",
          "-File",
          "${workspaceFolder}/tools/pwsh/Build-Package.ps1",
          "-PackageName",
          "fediproto-sync",
          "-BuildProfile",
          "Debug",
          "-Verbose"
        ]
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": true
      },
      "problemMatcher": "$rustc"
    }
  ],
  "inputs": [
    {
      "id": "packageName",
      "type": "pickString",
      "description": "Select a package to build",
      "default": "fediproto-sync",
      "options": [
        {
          "label": "fediproto-sync",
          "value": "fediproto-sync"
        },
        {
          "label": "fediproto-sync-db",
          "value": "fediproto-sync-db"
        },
        {
          "label": "fediproto-sync-lib",
          "value": "fediproto-sync-lib"
        },
        {
          "label": "fediproto-sync-build-lib",
          "value": "fediproto-sync-build-lib"
        }
      ]
    },
    {
      "id": "buildProfile",
      "description": "Select the build profile",
      "type": "pickString",
      "default": "Debug",
      "options": [
        {
          "label": "Debug",
          "value": "Debug"
        },
        {
          "label": "Release",
          "value": "Release"
        }
      ]
    },
    {
      "id": "dbType",
      "description": "Select the database type",
      "type": "pickString",
      "default": "postgres",
      "options": [
        {
          "label": "PostgreSQL",
          "value": "postgres"
        },
        {
          "label": "SQLite",
          "value": "sqlite"
        }
      ]
    },
    {
      "id": "dbMigrationName",
      "description": "Enter the name of the migration",
      "type": "promptString"
    },
    {
      "id": "dbUrl",
      "description": "Enter the database URL",
      "type": "promptString"
    },
    {
      "id": "gitTownAction",
      "description": "Select the action to perform with git-town",
      "type": "pickString",
      "default": "switch",
      "options": [
        {
          "label": "Switch branches",
          "value": "switch"
        },
        {
          "label": "Sync branches",
          "value": "sync"
        },
        {
          "label": "Sync branches (All)",
          "value": "sync-all"
        },
        {
          "label": "Create a feature branch",
          "value": "hack"
        },
        {
          "label": "Create a prototype branch",
          "value": "hack-prototype"
        }
      ]
    }
  ]
}
