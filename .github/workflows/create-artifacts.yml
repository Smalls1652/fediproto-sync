# yaml-language-server: $schema=https://json.schemastore.org/github-workflow
name: Create artifacts
on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  create-linux-artifacts:
    name: Create Linux artifacts
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        arch: [x64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update;
          sudo apt-get install -y \
            g++-x86-64-linux-gnu \
            libc6-dev-amd64-cross \
            g++-aarch64-linux-gnu \
            libc6-dev-arm64-cross \
            build-essential \
            crossbuild-essential-arm64 \
            crossbuild-essential-amd64 \
            git \
            pkg-config;

      - name: Install architecture specific dependencies (Linux - x64)
        if: ${{ matrix.arch == 'x64' }}
        shell: bash
        run: |
          sudo apt-get install -y \
            libpq-dev \
            libpq5 \
            libsqlite3-dev \
            libsqlite3-0 \
            libssl-dev;
    
      - name: Install architecture specific dependencies (Linux - arm64)
        if: ${{ matrix.arch == 'arm64' }}
        shell: bash
        run: |
          sudo dpkg --add-architecture arm64;
          sudo apt-get update;
          sudo apt-get install -y \
            libpq-dev:arm64 \
            libpq5:arm64 \
            libsqlite3-dev:arm64 \
            libsqlite3-0:arm64 \
            libssl-dev:arm64;

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly

      - name: Build (Linux - x64)
        if: ${{ matrix.arch == 'x64' }}
        shell: bash
        run: |
          export CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER="x86_64-linux-gnu-gcc";
          export CC_x86_64_unknown_linux_gnu="x86_64-linux-gnu-gcc";
          export CXX_x86_64_unknown_linux_gnu="x86_64-linux-gnu-g++";
          export FEDIPROTOSYNC_INCLUDE_COMMIT_HASH="${{ github.event_name == 'workflow_dispatch' }}"
          export FEDIPROTOSYNC_UPDATE_MANIFEST_VERSION="true";
          export PKG_CONFIG_SYSROOT_DIR=/;
          cargo build --package "fediproto-sync" --release --target "x86_64-unknown-linux-gnu";
          mkdir -p "${{ github.workspace }}/artifacts/linux-x64";
          cp "${{ github.workspace }}/target/x86_64-unknown-linux-gnu/release/fediproto-sync" "${{ github.workspace }}/artifacts/linux-x64/fediproto-sync";

      - name: Build (Linux - arm64)
        if: ${{ matrix.arch == 'arm64' }}
        shell: bash
        run: |
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER="aarch64-linux-gnu-gcc"
          export CC_aarch64_unknown_linux_gnu="aarch64-linux-gnu-gcc"
          export CXX_aarch64_unknown_linux_gnu="aarch64-linux-gnu-g++"
          export FEDIPROTOSYNC_INCLUDE_COMMIT_HASH="${{ github.event_name == 'workflow_dispatch' }}"
          export FEDIPROTOSYNC_UPDATE_MANIFEST_VERSION="true";
          export PKG_CONFIG_SYSROOT_DIR=/;
          cargo build --package "fediproto-sync" --release --target "aarch64-unknown-linux-gnu";
          mkdir -p "${{ github.workspace }}/artifacts/linux-arm64";
          cp "${{ github.workspace }}/target/aarch64-unknown-linux-gnu/release/fediproto-sync" "${{ github.workspace }}/artifacts/linux-arm64/fediproto-sync";

      - name: Create artifact (Linux - x64)
        uses: actions/upload-artifact@v4
        if: ${{ matrix.arch == 'x64' }}
        with:
          name: "fediproto-sync_linux-x64_${{ github.ref_type == 'tag' && github.ref_name || github.sha }}"
          path: ${{ github.workspace }}/artifacts/linux-x64/**/*
          if-no-files-found: error

      - name: Create artifact (Linux - arm64)
        uses: actions/upload-artifact@v4
        if: ${{ matrix.arch == 'arm64' }}
        with:
          name: "fediproto-sync_linux-arm64_${{ github.ref_type == 'tag' && github.ref_name || github.sha }}"
          path: ${{ github.workspace }}/artifacts/linux-arm64/**/*
          if-no-files-found: error
